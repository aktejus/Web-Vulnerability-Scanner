<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Web Page Vulnerability Scanner</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #white;
        }

        h1 {
            text-align: center;
            color: #333;
            padding: 20px 0;
            background-color: #3498db;
            color: #fff;
            margin: 0;
        }

        table {
            width: 80%;
            margin: 20px auto;
            border-collapse: collapse;
            border: 1px solid #ddd;
            background-color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #3498db;
            color: #fff;
        }

        tr:hover {
            background-color: #f5f5f5;
        }

        .vulnerable {
            color: #e74c3c;
            font-weight: bold;
        }

        .safe {
            color: #2ecc71;
            font-weight: bold;
        }
    </style>
</head>
<body>

<h1>Web Page Vulnerability Scanner</h1>

<table>
    <tr>
        <th>Vulnerability</th>
        <th>Result</th>
    </tr>

    <?php

function check_sqli($url, $payload) {
    $inject_url = $url . '?id=1' . $payload;
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $inject_url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    $response = curl_exec($ch);
    curl_close($ch);
    if (strpos($response, 'SQL syntax error') !== false || strpos($response, 'error') !== false) {
        return true;
    } else {
        return false;
    }
}

function check_xss($url, $payload) {
    $inject_url = $url . '?' . $payload;
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $inject_url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    $response = curl_exec($ch);
    curl_close($ch);
    if (strpos($response, $payload) !== false) {
        return true;
    } else {
        return false;
    }
}

function check_lfi($url, $payload) {
    $inject_url = $url . $payload;
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $inject_url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    $response = curl_exec($ch);
    curl_close($ch);
    if (strpos($response, 'root') !== false || strpos($response, '/etc') !== false) {
        return true;
    } else {
        return false;
    }
}
$url = $_POST['url'];
$payloads = array(
    'SQL Injection' => "' OR 1=1 --",
    'XSS' => "<script>alert('XSS')</script>",
    'LFI' => "/etc/passwd"
);

echo "<h1>Web Page Vulnerability Scanner</h1>";

echo "<table border='1'>";
echo "<tr><th>Vulnerability</th><th>Result</th></tr>";

foreach ($payloads as $vulnerability => $payload) {
    if ($vulnerability == 'SQL Injection') {
        if (check_sqli($url, $payload)) {
            echo "<tr><td>$vulnerability</td><td>Vulnerable</td></tr>";
        } else {
            echo "<tr><td>$vulnerability</td><td>Safe</td></tr>";
        }
    } elseif ($vulnerability == 'XSS') {
        if (check_xss($url, $payload)) {
            echo "<tr><td>$vulnerability</td><td>Vulnerable</td></tr>";
        } else {
            echo "<tr><td>$vulnerability</td><td>Safe</td></tr>";
        }
    } elseif ($vulnerability == 'LFI') {
        if (check_lfi($url, $payload)) {
            echo "<tr><td>$vulnerability</td><td>Vulnerable</td></tr>";
        } else {
            echo "<tr><td>$vulnerability</td><td>Safe</td></tr>";
        }
    }
}

echo "</table>";

?>
</table>

</body>
</html>
